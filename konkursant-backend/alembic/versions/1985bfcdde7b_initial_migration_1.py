"""Initial migration-1

Revision ID: 1985bfcdde7b
Revises: 
Create Date: 2024-09-24 20:53:04.731101

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1985bfcdde7b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id_user', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Integer(), nullable=True),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id_user')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_id_user'), ['id_user'], unique=False)

    op.create_table('projects',
    sa.Column('id_project', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('docs_file_path', sa.String(), nullable=True),
    sa.Column('json_file_path', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id_user'], ),
    sa.PrimaryKeyConstraint('id_project')
    )
    with op.batch_alter_table('projects', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_projects_id_project'), ['id_project'], unique=False)

    op.create_table('project_data',
    sa.Column('id_data', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('json_data', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id_project'], ),
    sa.PrimaryKeyConstraint('id_data')
    )
    with op.batch_alter_table('project_data', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_project_data_id_data'), ['id_data'], unique=False)

    op.create_table('reviews',
    sa.Column('id_review', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('reviewer_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('team_experience', sa.SmallInteger(), nullable=False),
    sa.Column('project_relevance', sa.SmallInteger(), nullable=False),
    sa.Column('solution_uniqueness', sa.SmallInteger(), nullable=False),
    sa.Column('implementation_scale', sa.SmallInteger(), nullable=False),
    sa.Column('development_potential', sa.SmallInteger(), nullable=False),
    sa.Column('project_transparency', sa.SmallInteger(), nullable=False),
    sa.Column('feasibility_and_effectiveness', sa.SmallInteger(), nullable=False),
    sa.Column('additional_resources', sa.SmallInteger(), nullable=False),
    sa.Column('planned_expenses', sa.SmallInteger(), nullable=False),
    sa.Column('budget_realism', sa.SmallInteger(), nullable=False),
    sa.Column('feedback', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id_project'], ),
    sa.ForeignKeyConstraint(['reviewer_id'], ['users.id_user'], ),
    sa.PrimaryKeyConstraint('id_review')
    )
    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_reviews_id_review'), ['id_review'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_reviews_id_review'))

    op.drop_table('reviews')
    with op.batch_alter_table('project_data', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_project_data_id_data'))

    op.drop_table('project_data')
    with op.batch_alter_table('projects', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_projects_id_project'))

    op.drop_table('projects')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_id_user'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    # ### end Alembic commands ###
